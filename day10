#!/usr/bin/env python3
# Copyright (C) 2015 Fernando Matsumoto

import sys

def lookAndSay(n, times=1): #faster than regex
    def lookAndSayGenerator(strings):
        last = None
        count = 0
        for string in strings:
            for char in string:
                if char == last:
                    count += 1
                else:
                    if last:
                        yield str(count)
                        yield last
                    last = char
                    count = 1
        yield str(count)
        yield last

    result = [str(n)]
    for _ in range(times):
        result = lookAndSayGenerator(result)
    
    return ''.join(result)

if __name__ == '__main__':
    n = sys.argv[1]

    print('After 40 iterations', n, 'has', len(lookAndSay(n, 40)), 'digits')
    print('After 50 iterations', n, 'has', len(lookAndSay(n, 50)), 'digits')
