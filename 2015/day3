#!/usr/bin/env python3
# Copyright (C) 2016 Fernando Matsumoto

"""
Advent of Code - 2016
Day 2: I Was Told There Would Be No Math

Part One:
    given the instructions to move north, south, east
    or west in a grid of houses, find the number of
    houses which receive at least one present.
    Including the initial position, every house Santa
    goes through receives a present.

Part Two:
    given that there are now Santa and Robo-Santa,
    taking turns to move based on the same set of
    instructions, find the number of houses which
    receive at least one present.

Instruction format: a string of the characters
                        ^ - north
                        v - south
                        > - east
                        < - west
"""

import sys

def move(point, direction):
    x1, y1 = point
    x2, y2 = {'^': (0, 1), 'v': (0, -1), '>': (1, 0), '<': (-1, 0)}[direction]
    return (x1 + x2, y1 + y2)

def getPointsPassed(path):
    p = (0, 0)
    points = {p}
    for direction in path:
        p = move(p, direction)
        points.add(p)
    return points

def getHousesPassed(fullPath, santas=1):
    paths = [[] for _ in range(santas)]
    for i, direction in enumerate(fullPath):
        paths[i % santas].append(direction)

    houses = set()
    for path in paths:
        houses |= getPointsPassed(path)
    return houses

def run():
    path = sys.argv[1]
    print('Houses Santa has passed through:', len(getHousesPassed(path)))
    print('Houses Santa and Robo-Santa have passed through:', len(getHousesPassed(path, 2)))

if __name__ == '__main__':
    run()
